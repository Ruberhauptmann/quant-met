stages:
  - test
  - publish

.base:
  image: python:3.12.2

.tests:
  image: 31z4/tox
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
  stage: test
  tags:
    - docker

.Linting:
  extends: .tests
  script:
    - tox -e py312-lint

.Type check:
  extends: .tests
  script:
    - tox -e py312-type

Test python3.12:
  extends: .tests
  script:
    - tox -e py312
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    paths:
      - report.xml
      - coverage.xml
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

Check version:
  extends: .base
  stage: test
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /release-.*/
    - if: $CI_COMMIT_TAG
  before_script:
    - pip install poetry
  script:
    - bash ./check_version.sh
  tags:
    - docker

Publish package:
  extends: .base
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - pip install poetry
  script:
    - poetry config repositories.gitlab ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
    - poetry build
    - poetry publish --repository gitlab --username gitlab-ci-token --password ${CI_JOB_TOKEN}
  tags:
    - docker
